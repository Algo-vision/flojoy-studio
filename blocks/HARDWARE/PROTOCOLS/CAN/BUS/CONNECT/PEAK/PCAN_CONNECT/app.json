{
    "rfInstance": {
        "nodes": [
            {
                "width": 192,
                "height": 192,
                "id": "PCAN_CONNECT-c4b7f9b3-e317-4d54-910d-0634de291ab5",
                "type": "HARDWARE",
                "data": {
                    "id": "PCAN_CONNECT-c4b7f9b3-e317-4d54-910d-0634de291ab5",
                    "label": "PCAN CONNECT",
                    "func": "PCAN_CONNECT",
                    "type": "HARDWARE",
                    "ctrls": {
                        "PCAN_address": {
                            "type": "str",
                            "default": null,
                            "desc": "The PCAN device address to connect to. This address can be found by the PCAN_DETECT_AVAILABLE_DEVICES block.\nâ†’ Example: \"PCAN_USBBUS1\"",
                            "overload": null,
                            "functionName": "PCAN_CONNECT",
                            "param": "PCAN_address",
                            "value": ""
                        },
                        "bitrate": {
                            "type": "int",
                            "default": 500000,
                            "desc": "The bitrate of the PCAN device. Default is 500000.",
                            "overload": null,
                            "functionName": "PCAN_CONNECT",
                            "param": "bitrate",
                            "value": 500000
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "multiple": false,
                            "desc": null
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": "Optional: None"
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "python-can",
                            "v": "4.3.1"
                        },
                        {
                            "name": "uptime",
                            "v": "3.0.1"
                        }
                    ],
                    "path": "HARDWARE/PROTOCOLS/CAN/BUS/CONNECT/PEAK/PCAN_CONNECT/PCAN_CONNECT.py"
                },
                "position": {
                    "x": -488.3712584621099,
                    "y": -60.25045244459068
                },
                "selected": false,
                "positionAbsolute": {
                    "x": -488.3712584621099,
                    "y": -60.25045244459068
                },
                "dragging": true
            },
            {
                "width": 192,
                "height": 192,
                "id": "PCAN_DETECT_AVAILABLE_DEVICES-69305ead-6130-4dd5-a799-53f77e98bc84",
                "type": "HARDWARE",
                "data": {
                    "id": "PCAN_DETECT_AVAILABLE_DEVICES-69305ead-6130-4dd5-a799-53f77e98bc84",
                    "label": "PCAN DETECT AVAILABLE DEVICES",
                    "func": "PCAN_DETECT_AVAILABLE_DEVICES",
                    "type": "HARDWARE",
                    "ctrls": {},
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "multiple": false,
                            "desc": null
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "String",
                            "desc": "A string containing the device name and the channel number."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "python-can",
                            "v": "4.3.1"
                        },
                        {
                            "name": "uptime",
                            "v": "3.0.1"
                        }
                    ],
                    "path": "HARDWARE/PROTOCOLS/CAN/BUS/CONNECT/PEAK/PCAN_DETECT_AVAILABLE_DEVICES/PCAN_DETECT_AVAILABLE_DEVICES.py"
                },
                "position": {
                    "x": -494.5542400283655,
                    "y": -545.9935443707147
                },
                "selected": false,
                "positionAbsolute": {
                    "x": -494.5542400283655,
                    "y": -545.9935443707147
                },
                "dragging": true
            },
            {
                "width": 225,
                "height": 225,
                "id": "TEXT_VIEW-99414fa2-83f0-478b-8fa1-ebefca56eaab",
                "type": "VISUALIZATION",
                "data": {
                    "id": "TEXT_VIEW-99414fa2-83f0-478b-8fa1-ebefca56eaab",
                    "label": "TEXT VIEW",
                    "func": "TEXT_VIEW",
                    "type": "VISUALIZATION",
                    "ctrls": {
                        "prettify": {
                            "type": "bool",
                            "default": false,
                            "desc": "Whether to prettify the displayed text (defaults to True)",
                            "overload": null,
                            "functionName": "TEXT_VIEW",
                            "param": "prettify",
                            "value": false
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "String|Boolean",
                            "multiple": false,
                            "desc": "The DataContainer to be visualized in text format"
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "String",
                            "desc": "The DataContainer containing text data"
                        }
                    ],
                    "path": "DATA/VISUALIZATION/DATA_STRUCTURE/TEXT_VIEW/TEXT_VIEW.py"
                },
                "position": {
                    "x": -516.046754096534,
                    "y": -314.1712436906474
                },
                "selected": false,
                "positionAbsolute": {
                    "x": -516.046754096534,
                    "y": -314.1712436906474
                },
                "dragging": true
            },
            {
                "width": 192,
                "height": 192,
                "id": "SET_CAN_BUS_FILTER-cce03cb6-2ac2-4805-8f74-45482eaa01f1",
                "type": "HARDWARE",
                "data": {
                    "id": "SET_CAN_BUS_FILTER-cce03cb6-2ac2-4805-8f74-45482eaa01f1",
                    "label": "SET CAN BUS FILTER",
                    "func": "SET_CAN_BUS_FILTER",
                    "type": "HARDWARE",
                    "ctrls": {
                        "CAN_address": {
                            "type": "str",
                            "default": null,
                            "desc": "The CAN bus address to attach the filter to.",
                            "overload": null,
                            "functionName": "SET_CAN_BUS_FILTER",
                            "param": "CAN_address",
                            "value": ""
                        },
                        "can_id": {
                            "type": "int",
                            "default": null,
                            "desc": "The ID of the message to filter.",
                            "overload": null,
                            "functionName": "SET_CAN_BUS_FILTER",
                            "param": "can_id",
                            "value": ""
                        },
                        "can_mask": {
                            "type": "int",
                            "default": null,
                            "desc": "todo",
                            "overload": null,
                            "functionName": "SET_CAN_BUS_FILTER",
                            "param": "can_mask",
                            "value": ""
                        },
                        "extended": {
                            "type": "bool",
                            "default": false,
                            "desc": "If true, only matches messages where <received_is_extended> == extended.",
                            "overload": null,
                            "functionName": "SET_CAN_BUS_FILTER",
                            "param": "extended",
                            "value": false
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "multiple": false,
                            "desc": null
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": "Optional: None"
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "python-can",
                            "v": "4.3.1"
                        }
                    ],
                    "path": "HARDWARE/PROTOCOLS/CAN/BUS/FILTER/SET_CAN_BUS_FILTER/SET_CAN_BUS_FILTER.py"
                },
                "position": {
                    "x": -498.4882082128637,
                    "y": 174.85126243479573
                },
                "selected": false,
                "positionAbsolute": {
                    "x": -498.4882082128637,
                    "y": 174.85126243479573
                },
                "dragging": true
            },
            {
                "width": 192,
                "height": 192,
                "id": "RECEIVE_CAN_MESSAGE-eec770d2-94b0-4799-ab90-ddfadf9fdf43",
                "type": "HARDWARE",
                "data": {
                    "id": "RECEIVE_CAN_MESSAGE-eec770d2-94b0-4799-ab90-ddfadf9fdf43",
                    "label": "RECEIVE CAN MESSAGE",
                    "func": "RECEIVE_CAN_MESSAGE",
                    "type": "HARDWARE",
                    "ctrls": {
                        "CAN_address": {
                            "type": "str",
                            "default": null,
                            "desc": null,
                            "overload": null,
                            "functionName": "RECEIVE_CAN_MESSAGE",
                            "param": "CAN_address",
                            "value": ""
                        },
                        "timeout": {
                            "type": "int",
                            "default": 10,
                            "desc": "The timeout in seconds to wait for a message. Default is 10.",
                            "overload": null,
                            "functionName": "RECEIVE_CAN_MESSAGE",
                            "param": "timeout",
                            "value": 10
                        },
                        "raise_error": {
                            "type": "bool",
                            "default": true,
                            "desc": "If True, an exception will be raised if no data is received. Default is True.",
                            "overload": null,
                            "functionName": "RECEIVE_CAN_MESSAGE",
                            "param": "raise_error",
                            "value": false
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "multiple": false,
                            "desc": null
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Stateful",
                            "desc": "Return a can bus message"
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "python-can",
                            "v": "4.3.1"
                        }
                    ],
                    "path": "HARDWARE/PROTOCOLS/CAN/BUS/RECEIVE/RECEIVE_CAN_MESSAGE/RECEIVE_CAN_MESSAGE.py"
                },
                "position": {
                    "x": 146.84861554506642,
                    "y": -318.53525967358075
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 146.84861554506642,
                    "y": -318.53525967358075
                },
                "dragging": true
            },
            {
                "width": 192,
                "height": 192,
                "id": "MF4_WRITE-31da4262-dc81-46a7-b0e7-d9fe8774719f",
                "type": "HARDWARE",
                "data": {
                    "id": "MF4_WRITE-31da4262-dc81-46a7-b0e7-d9fe8774719f",
                    "label": "MF4 WRITE",
                    "func": "MF4_WRITE",
                    "type": "HARDWARE",
                    "ctrls": {},
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "MF4_writer",
                            "id": "MF4_writer",
                            "type": "Stateful",
                            "multiple": false,
                            "desc": "A mf4 writer object from a MF4_CREATE_WRITER block."
                        },
                        {
                            "name": "messages",
                            "id": "messages",
                            "type": "Stateful",
                            "multiple": false,
                            "desc": "A list of message in the python-can format."
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": "None"
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "python-can",
                            "v": "4.3.1"
                        },
                        {
                            "name": "asammdf",
                            "v": "7.4.1"
                        }
                    ],
                    "path": "HARDWARE/PROTOCOLS/CAN/UTILS/MF4_WRITE/MF4_WRITE.py"
                },
                "position": {
                    "x": 423.9587741476561,
                    "y": -511.3491075653025
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 423.9587741476561,
                    "y": -511.3491075653025
                },
                "dragging": true
            },
            {
                "width": 96,
                "height": 96,
                "id": "LOOP-744938fd-44a2-4d05-8589-3db5efb27bdf",
                "type": "CONTROL_FLOW",
                "data": {
                    "id": "LOOP-744938fd-44a2-4d05-8589-3db5efb27bdf",
                    "label": "LOOP",
                    "func": "LOOP",
                    "type": "CONTROL_FLOW",
                    "ctrls": {
                        "num_loops": {
                            "type": "int",
                            "default": -1,
                            "desc": "number of times to iterate through body nodes, default is \"-1\" meaning infinity.",
                            "overload": null,
                            "functionName": "LOOP",
                            "param": "num_loops",
                            "value": 100
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "multiple": false,
                            "desc": null
                        }
                    ],
                    "outputs": [
                        {
                            "name": "body",
                            "id": "body",
                            "type": "Any",
                            "desc": "Forwards the input DataContainer to the body."
                        },
                        {
                            "name": "end",
                            "id": "end",
                            "type": "Any",
                            "desc": "Forwards the input DataContainer to the end."
                        }
                    ],
                    "path": "CONTROL_FLOW/LOOPS/LOOP/LOOP.py"
                },
                "position": {
                    "x": -175.3260349383128,
                    "y": -27.2357844104493
                },
                "selected": false,
                "positionAbsolute": {
                    "x": -175.3260349383128,
                    "y": -27.2357844104493
                },
                "dragging": true
            },
            {
                "width": 192,
                "height": 192,
                "id": "MF4_CREATE_WRITER-94c032f7-296e-47bc-96a2-053579212961",
                "type": "HARDWARE",
                "data": {
                    "id": "MF4_CREATE_WRITER-94c032f7-296e-47bc-96a2-053579212961",
                    "label": "MF4 CREATE WRITER",
                    "func": "MF4_CREATE_WRITER",
                    "type": "HARDWARE",
                    "ctrls": {
                        "dir": {
                            "type": "Directory",
                            "default": null,
                            "desc": "The directory to export to.",
                            "overload": null,
                            "functionName": "MF4_CREATE_WRITER",
                            "param": "dir",
                            "value": ""
                        },
                        "filename": {
                            "type": "str",
                            "default": "can_exported.mf4",
                            "desc": "The name of the file to output.",
                            "overload": null,
                            "functionName": "MF4_CREATE_WRITER",
                            "param": "filename",
                            "value": "can_exported.mf4"
                        },
                        "database": {
                            "type": "File",
                            "default": null,
                            "desc": "Path to a DBC or ARXML file that contains message description.",
                            "overload": null,
                            "functionName": "MF4_CREATE_WRITER",
                            "param": "database",
                            "value": ""
                        },
                        "compression_level": {
                            "type": "select",
                            "options": [
                                "No compression",
                                "Deflate (slower, but produces smaller files)",
                                "Transposition + Deflate (slowest, but produces the smallest files)"
                            ],
                            "default": "No compression",
                            "desc": "The compression level to use. Defaults to \"No compression\".",
                            "overload": null,
                            "functionName": "MF4_CREATE_WRITER",
                            "param": "compression_level",
                            "value": "No compression"
                        }
                    },
                    "initCtrls": {},
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Stateful",
                            "desc": "A stateful object that can be used to write CAN data to the file."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "python-can",
                            "v": "4.3.1"
                        },
                        {
                            "name": "asammdf",
                            "v": "7.4.1"
                        }
                    ],
                    "path": "HARDWARE/PROTOCOLS/CAN/UTILS/MF4_CREATE_WRITER/MF4_CREATE_WRITER.py"
                },
                "position": {
                    "x": -235.33517759254175,
                    "y": -543.4551057662699
                },
                "selected": false,
                "positionAbsolute": {
                    "x": -235.33517759254175,
                    "y": -543.4551057662699
                },
                "dragging": true
            },
            {
                "width": 192,
                "height": 192,
                "id": "MF4_CLOSE_WRITER-bd485f9f-2980-4851-874c-f8b5f94a9bfd",
                "type": "HARDWARE",
                "data": {
                    "id": "MF4_CLOSE_WRITER-bd485f9f-2980-4851-874c-f8b5f94a9bfd",
                    "label": "MF4 CLOSE WRITER",
                    "func": "MF4_CLOSE_WRITER",
                    "type": "HARDWARE",
                    "ctrls": {},
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "MF4_writer",
                            "id": "MF4_writer",
                            "type": "Stateful",
                            "multiple": false,
                            "desc": "A mf4 writer object from a MF4_CREATE_WRITER block."
                        },
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Stateful",
                            "multiple": false,
                            "desc": null
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": "None"
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "python-can",
                            "v": "4.3.1"
                        },
                        {
                            "name": "asammdf",
                            "v": "7.4.1"
                        }
                    ],
                    "path": "HARDWARE/PROTOCOLS/CAN/UTILS/MF4_CLOSE_WRITER/MF4_CLOSE_WRITER.py"
                },
                "position": {
                    "x": 118.17753941788519,
                    "y": 163.99520600630075
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 118.17753941788519,
                    "y": 163.99520600630075
                },
                "dragging": true
            },
            {
                "width": 192,
                "height": 192,
                "id": "MF4_CREATE_READER-4a866fac-2679-4964-9a04-e7279ca2c335",
                "type": "HARDWARE",
                "data": {
                    "id": "MF4_CREATE_READER-4a866fac-2679-4964-9a04-e7279ca2c335",
                    "label": "MF4 CREATE READER",
                    "func": "MF4_CREATE_READER",
                    "type": "HARDWARE",
                    "ctrls": {
                        "file": {
                            "type": "File",
                            "default": null,
                            "desc": "The file to write from.",
                            "overload": null,
                            "functionName": "MF4_CREATE_READER",
                            "param": "file",
                            "value": ""
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "multiple": false,
                            "desc": null
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Stateful",
                            "desc": "A stateful object that contains can a list of message."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "python-can",
                            "v": "4.3.1"
                        },
                        {
                            "name": "asammdf",
                            "v": "7.4.1"
                        }
                    ],
                    "path": "HARDWARE/PROTOCOLS/CAN/UTILS/MF4_CREATE_READER/MF4_CREATE_READER.py"
                },
                "position": {
                    "x": 388.441505380396,
                    "y": 165.40806684459812
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 388.441505380396,
                    "y": 165.40806684459812
                },
                "dragging": true
            },
            {
                "width": 96,
                "height": 96,
                "id": "TIMER-097fd240-a69e-4282-af52-4ddc559e0ef1",
                "type": "CONTROL_FLOW",
                "data": {
                    "id": "TIMER-097fd240-a69e-4282-af52-4ddc559e0ef1",
                    "label": "TIMER",
                    "func": "TIMER",
                    "type": "CONTROL_FLOW",
                    "ctrls": {
                        "sleep_time": {
                            "type": "float",
                            "default": 0,
                            "desc": "number of seconds to sleep",
                            "overload": null,
                            "functionName": "TIMER",
                            "param": "sleep_time",
                            "value": 0.05
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "multiple": false,
                            "desc": null
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": "Returns the input if one was passed in."
                        }
                    ],
                    "path": "CONTROL_FLOW/TIMERS/TIMER/TIMER.py"
                },
                "position": {
                    "x": 721.0181512555522,
                    "y": -479.86671539364204
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 721.0181512555522,
                    "y": -479.86671539364204
                },
                "dragging": true
            },
            {
                "width": 192,
                "height": 192,
                "id": "LOAD_DBC-847427b6-85e0-4db3-9c62-d3a841f591ff",
                "type": "HARDWARE",
                "data": {
                    "id": "LOAD_DBC-847427b6-85e0-4db3-9c62-d3a841f591ff",
                    "label": "LOAD DBC",
                    "func": "LOAD_DBC",
                    "type": "HARDWARE",
                    "ctrls": {
                        "file_path": {
                            "type": "File",
                            "default": null,
                            "desc": "The path to the DBC file.",
                            "overload": null,
                            "functionName": "LOAD_DBC",
                            "param": "file_path",
                            "value": ""
                        }
                    },
                    "initCtrls": {},
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Stateful",
                            "desc": "Return a cantools database object."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "python-can",
                            "v": "4.3.1"
                        },
                        {
                            "name": "cantools",
                            "v": "39.4.2"
                        }
                    ],
                    "path": "HARDWARE/PROTOCOLS/CAN/UTILS/LOAD_DBC/LOAD_DBC.py"
                },
                "position": {
                    "x": 374.6321131517166,
                    "y": -58.84613631338743
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 374.6321131517166,
                    "y": -58.84613631338743
                },
                "dragging": true
            },
            {
                "width": 192,
                "height": 192,
                "id": "DECODE_CAN_MESSAGE-51e00bc8-eda7-4816-a5cb-7651ad2ccc16",
                "type": "HARDWARE",
                "data": {
                    "id": "DECODE_CAN_MESSAGE-51e00bc8-eda7-4816-a5cb-7651ad2ccc16",
                    "label": "DECODE CAN MESSAGE",
                    "func": "DECODE_CAN_MESSAGE",
                    "type": "HARDWARE",
                    "ctrls": {},
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "dbc",
                            "id": "dbc",
                            "type": "Stateful",
                            "multiple": false,
                            "desc": "The database to use for decoding the message."
                        },
                        {
                            "name": "messages",
                            "id": "messages",
                            "type": "Stateful",
                            "multiple": false,
                            "desc": "The message to DECODE_CAN. Must be a can.Message object."
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "DataFrame",
                            "desc": "Return dataframe containing the DECODE_CANd message."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "python-can",
                            "v": "4.3.1"
                        },
                        {
                            "name": "cantools",
                            "v": "39.4.2"
                        }
                    ],
                    "path": "HARDWARE/PROTOCOLS/CAN/UTILS/DECODE_CAN_MESSAGE/DECODE_CAN_MESSAGE.py"
                },
                "position": {
                    "x": 737.7210428042669,
                    "y": 56.91864874068773
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 737.7210428042669,
                    "y": 56.91864874068773
                },
                "dragging": true
            },
            {
                "width": 208,
                "height": 96,
                "id": "EXPORT_CSV-3e28c08b-5198-4e2e-bbaa-605f90317212",
                "type": "DATA",
                "data": {
                    "id": "EXPORT_CSV-3e28c08b-5198-4e2e-bbaa-605f90317212",
                    "label": "EXPORT CSV",
                    "func": "EXPORT_CSV",
                    "type": "DATA",
                    "ctrls": {
                        "dir": {
                            "type": "Directory",
                            "default": null,
                            "desc": "The directory to export to.",
                            "overload": null,
                            "functionName": "EXPORT_CSV",
                            "param": "dir",
                            "value": ""
                        },
                        "filename": {
                            "type": "str",
                            "default": "exported.csv",
                            "desc": "The name of the file to output.",
                            "overload": null,
                            "functionName": "EXPORT_CSV",
                            "param": "filename",
                            "value": "exported.csv"
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "dc",
                            "id": "dc",
                            "type": "OrderedPair|OrderedTriple|DataFrame|Matrix",
                            "multiple": false,
                            "desc": "The DataContainer to export."
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": null
                        }
                    ],
                    "path": "DATA/EXPORT/EXPORT_CSV/EXPORT_CSV.py"
                },
                "position": {
                    "x": 1005.4307184219663,
                    "y": 104.38468607977438
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 1005.4307184219663,
                    "y": 104.38468607977438
                },
                "dragging": true
            },
            {
                "width": 208,
                "height": 96,
                "id": "EXPORT_S3-6a75204c-fa54-4457-8e6a-9504e95c4a40",
                "type": "DATA",
                "data": {
                    "id": "EXPORT_S3-6a75204c-fa54-4457-8e6a-9504e95c4a40",
                    "label": "EXPORT S3",
                    "func": "EXPORT_S3",
                    "type": "DATA",
                    "ctrls": {
                        "s3_access_key": {
                            "type": "str",
                            "default": "",
                            "desc": "The name of the key used to save the AWS access key.",
                            "overload": null,
                            "functionName": "EXPORT_S3",
                            "param": "s3_access_key",
                            "value": ""
                        },
                        "s3_secret_key": {
                            "type": "str",
                            "default": "",
                            "desc": "The name of the key used to save the AWS secret key.",
                            "overload": null,
                            "functionName": "EXPORT_S3",
                            "param": "s3_secret_key",
                            "value": ""
                        },
                        "bucket": {
                            "type": "str",
                            "default": "",
                            "desc": "The S3 bucket to upload the file to.",
                            "overload": null,
                            "functionName": "EXPORT_S3",
                            "param": "bucket",
                            "value": ""
                        },
                        "region": {
                            "type": "select",
                            "options": [
                                "us-east-1",
                                "us-east-2",
                                "us-west-1",
                                "us-west-2",
                                "ca-central-1",
                                "ca-west-1",
                                "eu-north-1",
                                "eu-west-3",
                                "eu-west-2",
                                "eu-west-1",
                                "eu-central-1",
                                "eu-south-1",
                                "ap-south-1",
                                "ap-northeast-1",
                                "ap-northeast-2",
                                "ap-northeast-3",
                                "ap-southeast-1",
                                "ap-southeast-2",
                                "ap-southeast-3",
                                "ap-east-1",
                                "sa-east-1",
                                "cn-north-1",
                                "cn-northwest-1",
                                "us-gov-east-1",
                                "us-gov-west-1",
                                "us-isob-east-1",
                                "us-iso-east-1",
                                "us-iso-west-1",
                                "me-south-1",
                                "af-south-1",
                                "me-central-1",
                                "eu-south-2",
                                "eu-central-2",
                                "ap-south-2",
                                "ap-southeast-4",
                                "il-central-1"
                            ],
                            "default": "us-east-1",
                            "desc": "The AWS region (default is \"us-east-1\").",
                            "overload": null,
                            "functionName": "EXPORT_S3",
                            "param": "region",
                            "value": "us-east-1"
                        },
                        "enable_overwrite": {
                            "type": "bool",
                            "default": false,
                            "desc": "Whether to overwrite the file if it already exists (default is False).",
                            "overload": null,
                            "functionName": "EXPORT_S3",
                            "param": "enable_overwrite",
                            "value": false
                        },
                        "file": {
                            "type": "File",
                            "default": null,
                            "desc": "The file to be uploaded to the S3 bucket.",
                            "overload": null,
                            "functionName": "EXPORT_S3",
                            "param": "file",
                            "value": ""
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "object_name",
                            "id": "object_name",
                            "type": "String",
                            "multiple": false,
                            "desc": "Flojoy input to dynamically provide a string for the name of the object in S3. If not specified, the name of the file will be used."
                        },
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "multiple": false,
                            "desc": null
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Boolean",
                            "desc": "Returns a Boolean indicating the success of the file export operation (True if successful, False otherwise)."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "boto3",
                            "v": "1.34.21"
                        }
                    ],
                    "path": "DATA/EXPORT/EXPORT_S3/EXPORT_S3.py"
                },
                "position": {
                    "x": 1266.2419037397315,
                    "y": 105.00152125249502
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 1266.2419037397315,
                    "y": 105.00152125249502
                },
                "dragging": true
            },
            {
                "width": 839,
                "height": 357,
                "id": "TEXT_VIEW-aea39f9a-9b75-48d4-953a-67ea6dcb8424",
                "type": "VISUALIZATION",
                "data": {
                    "id": "TEXT_VIEW-aea39f9a-9b75-48d4-953a-67ea6dcb8424",
                    "label": "TEXT VIEW 1",
                    "func": "TEXT_VIEW",
                    "type": "VISUALIZATION",
                    "ctrls": {
                        "prettify": {
                            "type": "bool",
                            "default": false,
                            "desc": "Whether to prettify the displayed text (defaults to True)",
                            "overload": null,
                            "functionName": "TEXT_VIEW",
                            "param": "prettify",
                            "value": false
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "String|Boolean",
                            "multiple": false,
                            "desc": "The DataContainer to be visualized in text format"
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "String",
                            "desc": "The DataContainer containing text data"
                        }
                    ],
                    "path": "DATA/VISUALIZATION/DATA_STRUCTURE/TEXT_VIEW/TEXT_VIEW.py"
                },
                "position": {
                    "x": 855.8367204027951,
                    "y": -407.5925930315358
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 855.8367204027951,
                    "y": -407.5925930315358
                },
                "dragging": true,
                "style": {
                    "width": 839,
                    "height": 357
                },
                "resizing": false
            },
            {
                "width": 150,
                "height": 180,
                "id": "PRINT_DATACONTAINER-dca6408b-0da9-4cda-888e-250d8fb63ac0",
                "type": "DEBUGGING",
                "data": {
                    "id": "PRINT_DATACONTAINER-dca6408b-0da9-4cda-888e-250d8fb63ac0",
                    "label": "PRINT DATACONTAINER",
                    "func": "PRINT_DATACONTAINER",
                    "type": "DEBUGGING",
                    "ctrls": {},
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "multiple": false,
                            "desc": "The input DataContainer to print."
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "String",
                            "desc": "String: Input datacontainer information"
                        }
                    ],
                    "path": "DEBUGGING/PRINT_DATACONTAINER/PRINT_DATACONTAINER.py"
                },
                "position": {
                    "x": 492.7663951809445,
                    "y": -318.16055682293177
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 492.7663951809445,
                    "y": -318.16055682293177
                },
                "dragging": true
            }
        ],
        "edges": [
            {
                "source": "TEXT_VIEW-99414fa2-83f0-478b-8fa1-ebefca56eaab",
                "sourceHandle": "default",
                "target": "PCAN_CONNECT-c4b7f9b3-e317-4d54-910d-0634de291ab5",
                "targetHandle": "default",
                "id": "reactflow__edge-TEXT_VIEW-99414fa2-83f0-478b-8fa1-ebefca56eaabdefault-PCAN_CONNECT-c4b7f9b3-e317-4d54-910d-0634de291ab5default"
            },
            {
                "source": "PCAN_DETECT_AVAILABLE_DEVICES-69305ead-6130-4dd5-a799-53f77e98bc84",
                "sourceHandle": "default",
                "target": "TEXT_VIEW-99414fa2-83f0-478b-8fa1-ebefca56eaab",
                "targetHandle": "default",
                "id": "reactflow__edge-PCAN_DETECT_AVAILABLE_DEVICES-69305ead-6130-4dd5-a799-53f77e98bc84default-TEXT_VIEW-99414fa2-83f0-478b-8fa1-ebefca56eaabdefault"
            },
            {
                "source": "PCAN_CONNECT-c4b7f9b3-e317-4d54-910d-0634de291ab5",
                "sourceHandle": "default",
                "target": "SET_CAN_BUS_FILTER-cce03cb6-2ac2-4805-8f74-45482eaa01f1",
                "targetHandle": "default",
                "id": "reactflow__edge-PCAN_CONNECT-c4b7f9b3-e317-4d54-910d-0634de291ab5default-SET_CAN_BUS_FILTER-cce03cb6-2ac2-4805-8f74-45482eaa01f1default"
            },
            {
                "source": "LOOP-744938fd-44a2-4d05-8589-3db5efb27bdf",
                "sourceHandle": "body",
                "target": "RECEIVE_CAN_MESSAGE-eec770d2-94b0-4799-ab90-ddfadf9fdf43",
                "targetHandle": "default",
                "id": "reactflow__edge-LOOP-744938fd-44a2-4d05-8589-3db5efb27bdfbody-RECEIVE_CAN_MESSAGE-eec770d2-94b0-4799-ab90-ddfadf9fdf43default"
            },
            {
                "source": "RECEIVE_CAN_MESSAGE-eec770d2-94b0-4799-ab90-ddfadf9fdf43",
                "sourceHandle": "default",
                "target": "MF4_WRITE-31da4262-dc81-46a7-b0e7-d9fe8774719f",
                "targetHandle": "messages",
                "id": "reactflow__edge-RECEIVE_CAN_MESSAGE-eec770d2-94b0-4799-ab90-ddfadf9fdf43default-MF4_WRITE-31da4262-dc81-46a7-b0e7-d9fe8774719fmessages"
            },
            {
                "source": "MF4_CREATE_WRITER-94c032f7-296e-47bc-96a2-053579212961",
                "sourceHandle": "default",
                "target": "MF4_WRITE-31da4262-dc81-46a7-b0e7-d9fe8774719f",
                "targetHandle": "MF4_writer",
                "id": "reactflow__edge-MF4_CREATE_WRITER-94c032f7-296e-47bc-96a2-053579212961default-MF4_WRITE-31da4262-dc81-46a7-b0e7-d9fe8774719fMF4_writer"
            },
            {
                "source": "SET_CAN_BUS_FILTER-cce03cb6-2ac2-4805-8f74-45482eaa01f1",
                "sourceHandle": "default",
                "target": "LOOP-744938fd-44a2-4d05-8589-3db5efb27bdf",
                "targetHandle": "default",
                "id": "reactflow__edge-SET_CAN_BUS_FILTER-cce03cb6-2ac2-4805-8f74-45482eaa01f1default-LOOP-744938fd-44a2-4d05-8589-3db5efb27bdfdefault"
            },
            {
                "source": "LOOP-744938fd-44a2-4d05-8589-3db5efb27bdf",
                "sourceHandle": "end",
                "target": "MF4_CLOSE_WRITER-bd485f9f-2980-4851-874c-f8b5f94a9bfd",
                "targetHandle": "default",
                "id": "reactflow__edge-LOOP-744938fd-44a2-4d05-8589-3db5efb27bdfend-MF4_CLOSE_WRITER-bd485f9f-2980-4851-874c-f8b5f94a9bfddefault"
            },
            {
                "source": "MF4_CREATE_WRITER-94c032f7-296e-47bc-96a2-053579212961",
                "sourceHandle": "default",
                "target": "MF4_CLOSE_WRITER-bd485f9f-2980-4851-874c-f8b5f94a9bfd",
                "targetHandle": "MF4_writer",
                "id": "reactflow__edge-MF4_CREATE_WRITER-94c032f7-296e-47bc-96a2-053579212961default-MF4_CLOSE_WRITER-bd485f9f-2980-4851-874c-f8b5f94a9bfdMF4_writer"
            },
            {
                "source": "MF4_CLOSE_WRITER-bd485f9f-2980-4851-874c-f8b5f94a9bfd",
                "sourceHandle": "default",
                "target": "MF4_CREATE_READER-4a866fac-2679-4964-9a04-e7279ca2c335",
                "targetHandle": "default",
                "id": "reactflow__edge-MF4_CLOSE_WRITER-bd485f9f-2980-4851-874c-f8b5f94a9bfddefault-MF4_CREATE_READER-4a866fac-2679-4964-9a04-e7279ca2c335default"
            },
            {
                "source": "MF4_CREATE_READER-4a866fac-2679-4964-9a04-e7279ca2c335",
                "sourceHandle": "default",
                "target": "DECODE_CAN_MESSAGE-51e00bc8-eda7-4816-a5cb-7651ad2ccc16",
                "targetHandle": "messages",
                "id": "reactflow__edge-MF4_CREATE_READER-4a866fac-2679-4964-9a04-e7279ca2c335default-DECODE_CAN_MESSAGE-51e00bc8-eda7-4816-a5cb-7651ad2ccc16messages"
            },
            {
                "source": "LOAD_DBC-847427b6-85e0-4db3-9c62-d3a841f591ff",
                "sourceHandle": "default",
                "target": "DECODE_CAN_MESSAGE-51e00bc8-eda7-4816-a5cb-7651ad2ccc16",
                "targetHandle": "dbc",
                "id": "reactflow__edge-LOAD_DBC-847427b6-85e0-4db3-9c62-d3a841f591ffdefault-DECODE_CAN_MESSAGE-51e00bc8-eda7-4816-a5cb-7651ad2ccc16dbc"
            },
            {
                "source": "DECODE_CAN_MESSAGE-51e00bc8-eda7-4816-a5cb-7651ad2ccc16",
                "sourceHandle": "default",
                "target": "EXPORT_CSV-3e28c08b-5198-4e2e-bbaa-605f90317212",
                "targetHandle": "dc",
                "id": "reactflow__edge-DECODE_CAN_MESSAGE-51e00bc8-eda7-4816-a5cb-7651ad2ccc16default-EXPORT_CSV-3e28c08b-5198-4e2e-bbaa-605f90317212dc"
            },
            {
                "source": "EXPORT_CSV-3e28c08b-5198-4e2e-bbaa-605f90317212",
                "sourceHandle": "default",
                "target": "EXPORT_S3-6a75204c-fa54-4457-8e6a-9504e95c4a40",
                "targetHandle": "default",
                "id": "reactflow__edge-EXPORT_CSV-3e28c08b-5198-4e2e-bbaa-605f90317212default-EXPORT_S3-6a75204c-fa54-4457-8e6a-9504e95c4a40default"
            },
            {
                "source": "PRINT_DATACONTAINER-dca6408b-0da9-4cda-888e-250d8fb63ac0",
                "sourceHandle": "default",
                "target": "TEXT_VIEW-aea39f9a-9b75-48d4-953a-67ea6dcb8424",
                "targetHandle": "default",
                "id": "reactflow__edge-PRINT_DATACONTAINER-dca6408b-0da9-4cda-888e-250d8fb63ac0default-TEXT_VIEW-aea39f9a-9b75-48d4-953a-67ea6dcb8424default"
            },
            {
                "source": "MF4_WRITE-31da4262-dc81-46a7-b0e7-d9fe8774719f",
                "sourceHandle": "default",
                "target": "TIMER-097fd240-a69e-4282-af52-4ddc559e0ef1",
                "targetHandle": "default",
                "id": "reactflow__edge-MF4_WRITE-31da4262-dc81-46a7-b0e7-d9fe8774719fdefault-TIMER-097fd240-a69e-4282-af52-4ddc559e0ef1default"
            },
            {
                "source": "RECEIVE_CAN_MESSAGE-eec770d2-94b0-4799-ab90-ddfadf9fdf43",
                "sourceHandle": "default",
                "target": "PRINT_DATACONTAINER-dca6408b-0da9-4cda-888e-250d8fb63ac0",
                "targetHandle": "default",
                "id": "reactflow__edge-RECEIVE_CAN_MESSAGE-eec770d2-94b0-4799-ab90-ddfadf9fdf43default-PRINT_DATACONTAINER-dca6408b-0da9-4cda-888e-250d8fb63ac0default"
            }
        ],
        "viewport": {
            "x": 803.626355346428,
            "y": 455.6158501842781,
            "zoom": 0.7727010437043228
        }
    },
    "textNodes": []
}